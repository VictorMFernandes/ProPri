// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace Rise.Students.Data.Migrations
{
    [DbContext(typeof(StudentsContext))]
    [Migration("20191207144818_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("Rise.Students.Domain.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("tb_student");
                });

            modelBuilder.Entity("Rise.Students.Domain.Student", b =>
                {
                    b.OwnsOne("Rise.Core.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("StudentId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("City")
                                .HasColumnName("AddressCity")
                                .HasColumnType("TEXT")
                                .HasMaxLength(30);

                            b1.Property<string>("Complement")
                                .HasColumnName("AddressComplement")
                                .HasColumnType("TEXT")
                                .HasMaxLength(60);

                            b1.Property<string>("District")
                                .HasColumnName("AddressDistrict")
                                .HasColumnType("TEXT")
                                .HasMaxLength(30);

                            b1.Property<string>("Number")
                                .HasColumnName("AddressNumber")
                                .HasColumnType("TEXT")
                                .HasMaxLength(6);

                            b1.Property<string>("State")
                                .HasColumnName("AddressState")
                                .HasColumnType("TEXT")
                                .HasMaxLength(30);

                            b1.Property<string>("Street")
                                .HasColumnName("AddressStreet")
                                .HasColumnType("TEXT")
                                .HasMaxLength(30);

                            b1.Property<string>("ZipCode")
                                .HasColumnName("AddressZipCode")
                                .HasColumnType("TEXT")
                                .HasMaxLength(8);

                            b1.HasKey("StudentId");

                            b1.ToTable("tb_student");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");
                        });

                    b.OwnsOne("Rise.Core.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("StudentId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("TEXT")
                                .HasMaxLength(160);

                            b1.HasKey("StudentId");

                            b1.ToTable("tb_student");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");
                        });

                    b.OwnsOne("Rise.Core.Domain.ValueObjects.Image", "Image", b1 =>
                        {
                            b1.Property<Guid>("StudentId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PublicId")
                                .HasColumnName("ImagePublicId")
                                .HasColumnType("TEXT")
                                .HasMaxLength(25);

                            b1.Property<string>("Url")
                                .HasColumnName("ImageUrl")
                                .HasColumnType("TEXT")
                                .HasMaxLength(160);

                            b1.HasKey("StudentId");

                            b1.ToTable("tb_student");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");
                        });

                    b.OwnsOne("Rise.Core.Domain.ValueObjects.PersonName", "Name", b1 =>
                        {
                            b1.Property<Guid>("StudentId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnName("FirstName")
                                .HasColumnType("TEXT")
                                .HasMaxLength(3);

                            b1.Property<string>("Surname")
                                .IsRequired()
                                .HasColumnName("Surname")
                                .HasColumnType("TEXT")
                                .HasMaxLength(60);

                            b1.HasKey("StudentId");

                            b1.ToTable("tb_student");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");
                        });

                    b.OwnsOne("Rise.Students.Domain.Credentials", "Credentials", b1 =>
                        {
                            b1.Property<Guid>("StudentId")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("Active")
                                .HasColumnName("Active")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Login")
                                .IsRequired()
                                .HasColumnName("Login")
                                .HasColumnType("TEXT")
                                .HasMaxLength(30);

                            b1.Property<string>("Password")
                                .IsRequired()
                                .HasColumnName("Password")
                                .HasColumnType("TEXT")
                                .IsFixedLength(true)
                                .HasMaxLength(32);

                            b1.HasKey("StudentId");

                            b1.HasIndex("Login")
                                .IsUnique();

                            b1.ToTable("tb_student");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
